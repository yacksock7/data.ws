<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.aetherit</groupId>
    <artifactId>project.base</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <profiles>
        <profile>
            <id>production</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <build.number>0</build.number>
                <docker.file>Dockerfile</docker.file>
                <docker.userRepository>aetherit/${project.name}</docker.userRepository>
                <docker.tag>${project.version}</docker.tag>
            </properties>
        </profile>

        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <build.number>0</build.number>
                <docker.file>Dockerfile</docker.file>
                <docker.userRepository>aetherit/${project.name}</docker.userRepository>
                <docker.tag>development</docker.tag>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.4</version>
        </dependency>


        <!-- Databases -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.0</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.4.3</version>
        </dependency>

        <!-- Apache Commons IO -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.13</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.time</name>
                            <pattern>yyyyMMdd_HHmm</pattern>
                            <timeZone>Asia/Seoul</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <workingDirectory>./web</workingDirectory>
                    <installDirectory>./web</installDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install-node-and-yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>v12.15.0</nodeVersion>
                            <yarnVersion>v1.22.0</yarnVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn-build</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>update-source-versions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Set NAME = ${project.groupId}.${project.artifactId}" />
                                <echo message="Set VERSION = ${project.version}" />
                                <!--suppress MavenModelInspection -->
                                <echo message="Set BUILD_ID = ${build.time}" />
                                <echo message="Set BUILD_NUMBER = ${build.number}" />
                                <echo message="Set SERVER-INFO = ${project.groupId}.${project.artifactId} ${project.version}" />

                                <!--
                                    Updating sources
                                -->
                                <echo message="Updating InformationController.java" />
                                <replaceregexp byline="true" file="${basedir}/src/main/java/io/aetherit/project/base/controller/InformationController.java">
                                    <regexp pattern="public static final String NAME = &quot;[0-9A-Za-z\(\)\#\-\{\}$:_. ]*&quot;;" />
                                    <substitution expression="public static final String NAME = &quot;${project.groupId}.${project.artifactId}&quot;;" />
                                </replaceregexp>
                                <replaceregexp byline="true" file="${basedir}/src/main/java/io/aetherit/project/base/controller/InformationController.java">
                                    <regexp pattern="public static final String VERSION = &quot;[0-9A-Za-z\(\)\#\-\{\}$:_. ]*&quot;;" />
                                    <substitution expression="public static final String VERSION = &quot;${project.version}&quot;;" />
                                </replaceregexp>
                                <replaceregexp byline="true" file="${basedir}/src/main/java/io/aetherit/project/base/controller/InformationController.java">
                                    <regexp pattern="public static final String BUILD_ID = &quot;[0-9A-Za-z\(\)\#\-\{\}$:_. ]*&quot;;" />
                                    <!--suppress MavenModelInspection -->
                                    <substitution expression="public static final String BUILD_ID = &quot;${build.time}&quot;;" />
                                </replaceregexp>
                                <replaceregexp byline="true" file="${basedir}/src/main/java/io/aetherit/project/base/controller/InformationController.java">
                                    <regexp pattern="public static final String BUILD_NUMBER = &quot;[0-9A-Za-z\(\)\#\-\{\}$:_. ]*&quot;;" />
                                    <substitution expression="public static final String BUILD_NUMBER = &quot;${build.number}&quot;;" />
                                </replaceregexp>

                                <!--
                                    Updating resources
                                -->
                                <replaceregexp byline="true" file="${basedir}/src/main/resources/application.properties">
                                    <regexp pattern="tbk.tomcat.server-info=[0-9A-Za-z\(\)\#\-\{\}$:_. ]*" />
                                    <substitution expression="tbk.tomcat.server-info=${project.groupId}.${project.artifactId} ${project.version}" />
                                </replaceregexp>
                                <replaceregexp byline="true" file="${basedir}/src/main/resources/banner.txt">
                                    <regexp pattern="    :: [0-9A-Za-z\(\)\#\-\{\}$:_. ]* :: [0-9A-Za-z\(\)\#\-\{\}$:_. ]*" />
                                    <!--suppress MavenModelInspection -->
                                    <substitution expression="    :: ${project.artifactId} :: (v${project.version} ${build.time} #${build.number})" />
                                </replaceregexp>

                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-web-resources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/classes/static">
                                    <fileset dir="${project.basedir}/web/build"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.10</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dockerfile>${docker.file}</dockerfile>
                    <repository>${docker.userRepository}</repository>
                    <tag>${docker.tag}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>